{"version":3,"sources":["services/logService.js","services/authServices.js","services/httpServices.js","services/postsServices.js","services/formSchema.js","components/common/input.jsx","components/common/select.jsx","components/common/textarea.jsx","components/common/form.jsx","components/loginForm.jsx","components/signUp.jsx","components/projectForm.jsx","utils/formatTime.js","components/tasks.jsx","components/project.jsx","components/home.jsx","components/usersDisplay.jsx","components/logout.jsx","components/sidenav.jsx","components/common/protectedRoute.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["init","log","error","console","getCurrentUser","decode","localStorage","getItem","loginWithJwt","token","setItem","getUrl","endpoint","apiUrl","data","a","http","post","login","register","axios","defaults","headers","common","interceptors","response","use","status","logger","toast","Promise","reject","get","patch","delete","getAllProjects","getProject","id","saveProject","project","_id","projectClone","deleteProject","approveUser","getUsers","deleteUser","postTask","getTasks","deleteTask","markDone","signUpSchema","name","Joi","string","min","required","label","position","email","password","regex","message","loginSchema","projectSchema","owner","any","vendor","description","startDate","endDate","taskSchema","taskDescription","getSignUpSchema","getLoginSchema","getProjectSchema","getTaskSchema","Input","rest","className","htmlFor","placeholder","Select","options","value","map","option","key","TextArea","Form","state","errors","validate","result","schema","abortEarly","details","item","path","handleSubmit","e","preventDefault","setState","doSubmit","validateProperty","obj","handleChange","input","currentTarget","files","image","disabled","this","onChange","type","Component","Login","auth","window","location","err","Fragment","onSubmit","inputField","renderButton","to","SignUp","props","history","push","ProjectForm","ownerOptions","users","match","params","selectField","renderTextArea","getDate","date","Date","toLocaleDateString","Tasks","tasks","newTaskId","currProjectId","componentDidMount","handleNewTask","bool","newTaskForm","handleDone","handleTaskDelete","renderTaskForm","renderTasks","user","filter","task","newTaskClass","isAdmin","onClick","length","handleTaskCondition","done","style","color","ownerId","Project","projects","getProjects","param","deleteProj","days","date1","date2","difference","getTime","Math","round","daysLeft","Home","UserDisplay","handleApprove","handleUserDel","userId","undefined","approved","Logout","removeItem","SideNav","x","document","getElementById","indexOf","previousElementSibling","replace","width","top","myDropFunc","ProtectedRoute","component","render","pathname","from","App","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fc4e56f.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import http from './httpServices'\r\nimport {\r\n    apiUrl\r\n} from '../config.json'\r\nimport decode from \"jwt-decode\";\r\n\r\nconst jwtToken = \"token\"\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const user = decode(localStorage.getItem(jwtToken));\r\n        return user\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport function loginWithJwt(token) {\r\n    localStorage.setItem(jwtToken, token)\r\n}\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(\"token\");\r\n}\r\n\r\nfunction getUrl(endpoint) {\r\n    return `${apiUrl}/user/${endpoint}`\r\n}\r\n\r\nexport async function login(data) {\r\n    return await http.post(getUrl(\"login\"), data)\r\n}\r\n\r\nexport async function register(data) {\r\n    return await http.post(getUrl(\"register\"), data)\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(\"token\")\r\n}\r\n\r\nexport default {\r\n    login,\r\n    register,\r\n    loginWithJwt,\r\n    getCurrentUser\r\n}","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport {\r\n  toast\r\n} from \"react-toastify\";\r\nimport {\r\n  getJwt\r\n} from \"./authServices\";\r\n\r\naxios.defaults.headers.common[\"todo-auth-token\"] = getJwt()\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\n\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  patch: axios.patch,\r\n  delete: axios.delete\r\n};","import http from \"./httpServices\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n// Projects\r\nexport function getAllProjects() {\r\n  return http.get(`${apiUrl}/project/all`);\r\n}\r\n\r\nexport function getProject(id) {\r\n  return http.get(`${apiUrl}/project/${id}`);\r\n}\r\n\r\nexport function saveProject(project) {\r\n  if (project._id) {\r\n    const projectClone = {\r\n      ...project\r\n    };\r\n    delete projectClone._id;\r\n    return http.patch(`${apiUrl}/project/${project._id}`, projectClone);\r\n  }\r\n  return http.post(`${apiUrl}/project`, project);\r\n}\r\n\r\nexport function deleteProject(id) {\r\n  return http.delete(`${apiUrl}/project/${id}`);\r\n}\r\n\r\n// User\r\nexport function approveUser(id) {\r\n  return http.patch(`${apiUrl}/user/${id}/approve`);\r\n}\r\n\r\nexport function getUsers() {\r\n  return http.get(`${apiUrl}/user/all`);\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return http.delete(`${apiUrl}/user/${id}`);\r\n}\r\nexport function getUser(id) {\r\n  return http.get(`${apiUrl}/user/${id}`);\r\n}\r\n\r\n// Task\r\nexport function postTask(data) {\r\n  return http.post(`${apiUrl}/task`, data);\r\n}\r\n\r\nexport function getTasks(id) {\r\n  return http.get(`${apiUrl}/task/${id}`);\r\n}\r\n\r\nexport function deleteTask(id) {\r\n  return http.delete(`${apiUrl}/task/${id}`);\r\n}\r\nexport function markDone(id) {\r\n  return http.patch(`${apiUrl}/task/${id}/done`);\r\n}\r\n\r\n// COMMENT\r\nexport function articleComment(id, data) {\r\n  return http.post(`${apiUrl}articles/${id}/comment`, data);\r\n}\r\n\r\nexport function gifComment(id, data) {\r\n  return http.post(`${apiUrl}gifs/${id}/comment`, data);\r\n}\r\n","import Joi from \"joi-browser\";\r\n\r\nconst signUpSchema = {\r\n    name: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"name\"),\r\n    position: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"position\"),\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .regex(/(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{7,50})$/)\r\n        .error(() => {\r\n            return {\r\n                message: \"Password must be at least 7 characters long with at least a digit\"\r\n            };\r\n        })\r\n}\r\n\r\nconst loginSchema = {\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .min(7)\r\n        .required()\r\n        .label(\"Password\")\r\n}\r\n\r\nconst projectSchema = {\r\n    name: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"name\"),\r\n    owner: Joi.any()\r\n        .required()\r\n        .label(\"owner\"),\r\n    vendor: Joi.string()\r\n        .min(20)\r\n        .required()\r\n        .label(\"vendor\"),\r\n    description: Joi.string()\r\n        .min(20)\r\n        .required()\r\n        .label(\"description\"),\r\n    startDate: Joi.any()\r\n        .required()\r\n        .label(\"Start date\"),\r\n    endDate: Joi.any()\r\n        .required()\r\n        .label(\"End date\"),\r\n    _id: Joi.any()\r\n}\r\n\r\nconst taskSchema = {\r\n    taskDescription: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"description\")\r\n}\r\n\r\n\r\nexport function getSignUpSchema() {\r\n    return signUpSchema\r\n}\r\nexport function getLoginSchema() {\r\n    return loginSchema\r\n}\r\n\r\nexport function getProjectSchema() {\r\n    return projectSchema\r\n}\r\n\r\nexport function getTaskSchema() {\r\n    return taskSchema\r\n}","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        placeholder={label}\r\n        className=\"form-control\"\r\n        {...rest}\r\n      />\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, error, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} className=\"form-control\" id={name} {...rest}>\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nconst TextArea = ({ name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea name={name} {...rest}></textarea>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({\r\n      errors: errors || {}\r\n    });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  validateProperty = (name, value) => {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    let value = input.value;\r\n    if (input.files) {\r\n      this.setState({\r\n        image: input.files[0]\r\n      });\r\n    }\r\n    const errors = { ...this.state.errors };\r\n    const error = this.validateProperty(input.name, value);\r\n    if (error) errors[input.name] = error;\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    data[input.name] = value;\r\n    this.setState({\r\n      data,\r\n      errors\r\n    });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return <button disabled={this.validate()}>{label}</button>;\r\n  }\r\n\r\n  selectField(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  inputField(name, label, type = \"text\", placeholder = \"\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, placeholder) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TextArea\r\n        value={data[name]}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport auth, { loginWithJwt } from \"../services/authServices\";\r\nimport { getLoginSchema } from \"../services/formSchema\";\r\nimport Form from \"./common/form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n  schema = getLoginSchema();\r\n  async doSubmit() {\r\n    try {\r\n      const response = await auth.login(this.state.data);\r\n      loginWithJwt(response.headers[\"todo-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      let errors = { ...this.state.errors };\r\n      if (err.status === 401) {\r\n        errors.password = \"User pending approval\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      } else {\r\n        errors.password = \"Incorrect email or password\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      }\r\n      //   toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"auth-form\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.inputField(\"email\", \"Email\")}\r\n            {this.inputField(\"password\", \"Password\")}\r\n            {this.renderButton(\"Login\")}\r\n          </form>\r\n          <Link to=\"/register\">Register</Link>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport auth from \"../services/authServices\";\r\nimport { getSignUpSchema } from \"../services/formSchema\";\r\nimport Form from \"./common/form\";\r\n\r\nclass SignUp extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      position: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = getSignUpSchema();\r\n\r\n  async doSubmit() {\r\n    try {\r\n      await auth.register(this.state.data);\r\n      this.props.history.push(\"/login\");\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      if (err) {\r\n        let errors = { ...this.state.errors };\r\n        errors.email = \"User with email exists\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      }\r\n      //   toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"auth-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField(\"name\", \"Name\")}\r\n          {this.inputField(\"email\", \"Email\")}\r\n          {this.inputField(\"password\", \"Password\")}\r\n          {this.inputField(\"position\", \"Position\")}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { getProjectSchema } from \"../services/formSchema\";\r\nimport Form from \"./common/form\";\r\nimport * as http from \"../services/postsServices\";\r\n\r\nclass ProjectForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      vendor: \"\",\r\n      owner: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\"\r\n    },\r\n    errors: {},\r\n    ownerOptions: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await http.getUsers();\r\n      const users = response.data;\r\n\r\n      const id = this.props.match.params.id;\r\n      if (id) {\r\n        let project = await http.getProject(id);\r\n        project = project.data;\r\n        if (project) {\r\n          const data = { ...this.state.data };\r\n          data.name = project.name;\r\n          data.vendor = project.vendor;\r\n          data.owner = project.owner;\r\n          data.name = project.name;\r\n          data.description = project.description;\r\n          data.startDate = \"\";\r\n          data.endDate = \"\";\r\n          data._id = project._id;\r\n          this.setState({\r\n            data,\r\n            ownerOptions: users,\r\n            errors: []\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ownerOptions: users,\r\n          errors: []\r\n        });\r\n      }\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n    }\r\n  }\r\n  schema = getProjectSchema();\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await http.saveProject(this.state.data);\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {}\r\n    //   toast.error(\"Unexpected error\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"auth-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField(\"name\", \"Name\")}\r\n          {this.selectField(\"owner\", \"Owner\", this.state.ownerOptions)}\r\n          {this.inputField(\"vendor\", \"Vendor\")}\r\n          {this.renderTextArea(\"description\", \"Enter project description\")}\r\n          {this.inputField(\"startDate\", \"Start\", \"date\")}\r\n          {this.inputField(\"endDate\", \"End\", \"date\")}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectForm;\r\n","export function getDate(date) {\r\n  date = new Date(date);\r\n  date = date.toLocaleDateString();\r\n  return date;\r\n}\r\n\r\nexport function daysLeft(date1, date2) {\r\n  date1 = new Date();\r\n  date2 = new Date(date2);\r\n  let difference = date2.getTime() - date1.getTime();\r\n  difference = difference < 0 ? 0 : difference;\r\n  let result = Math.round(difference / (1000 * 3600 * 24));\r\n  return result;\r\n}\r\n\r\nexport function getFormDate(date) {\r\n  date = new Date(date);\r\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDay()}`;\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport { getTaskSchema } from \"../services/formSchema\";\r\nimport * as http from \"../services/postsServices\";\r\n\r\nclass Tasks extends Form {\r\n  state = {\r\n    data: {\r\n      taskDescription: \"\"\r\n    },\r\n    tasks: [],\r\n    newTaskId: \"\",\r\n    currProjectId: \"\",\r\n    errors: []\r\n  };\r\n\r\n  schema = getTaskSchema();\r\n\r\n  componentDidMount = () => {\r\n    this.getTasks();\r\n  };\r\n\r\n  getTasks = async () => {\r\n    try {\r\n      const response = await http.getTasks();\r\n      this.setState({\r\n        tasks: response.data\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleNewTask = id => {\r\n    const { newTaskForm } = this.state;\r\n    const { currProjectId } = this.props;\r\n    let bool = newTaskForm ? false : true;\r\n    if (currProjectId !== id) {\r\n      this.setState({\r\n        currProjectId: id,\r\n        newTaskForm: bool\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newTaskForm: bool\r\n      });\r\n    }\r\n    // this.renderTasks();\r\n  };\r\n\r\n  handleDone = async id => {\r\n    try {\r\n      await http.markDone(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleTaskDelete = async id => {\r\n    try {\r\n      await http.deleteTask(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  renderTaskForm = () => {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {this.inputField(\"taskDescription\", \"\")}\r\n        {this.renderButton(\"Add\")}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { currProjectId: project } = this.state;\r\n    const { taskDescription: description } = this.state.data;\r\n    try {\r\n      const data = { description, project };\r\n      await http.postTask(data);\r\n      this.getTasks(project);\r\n      this.setState({\r\n        data: { taskDescription: \"\" },\r\n        newTaskForm: false\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  // method to handle task condition, i.e either task is pending or task done\r\n  handleTaskCondition(task, owner) {\r\n    const { user } = this.props;\r\n    {\r\n      /* if task is not done show done button and the text pending */\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {/* displays \"pending\" and \"done\" button if task has not been done yet */}\r\n        {!task.done && (\r\n          <span>\r\n            <small style={{ color: \"red\" }}>Pending</small>\r\n            {user._id === owner && (\r\n              <button onClick={() => this.handleDone(task._id, \"done\")}>\r\n                Done\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n        {/*display \"done\" and \"undo\" button is task is done */}\r\n        {task.done && (\r\n          <span className=\"task-state\">\r\n            <i className=\"fa fa-check\">\r\n              <small>Done</small>\r\n            </i>\r\n            {user._id === owner && (\r\n              <button onClick={() => this.handleDone(task._id, \"undo\")}>\r\n                Undo\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  // method to display all tasks\r\n  renderTasks = (id, owner) => {\r\n    let { tasks, newTaskForm, currProjectId } = this.state;\r\n    const { user } = this.props;\r\n    // filters all tasks for a particular project\r\n    tasks = tasks.filter(task => task.project === id);\r\n    let newTaskClass = \"fa fa-\";\r\n    newTaskClass += newTaskForm ? \"minus\" : \"plus\";\r\n    return (\r\n      <div>\r\n        <h4>\r\n          {/* tasks head */}\r\n          <i className=\"fa fa-tasks\"></i> Tasks &emsp;\r\n          {/* display plus or minus sign if user is an admin depending on the className */}\r\n          {user.isAdmin && (\r\n            <i\r\n              onClick={() => this.handleNewTask(id)}\r\n              className={newTaskClass}\r\n            ></i>\r\n          )}\r\n        </h4>\r\n\r\n        {/* tasks head ends here */}\r\n\r\n        {/* if no task is present display the text no task yet*/}\r\n        {tasks.length === 0 && \"No task yet\"}\r\n\r\n        {/* renders projects tasks */}\r\n        {tasks.map(task => (\r\n          <div className=\"task\" key={task._id}>\r\n            <p>\r\n              {task.description} &emsp;&emsp;\r\n              {/* handle tasks condition */}\r\n              {this.handleTaskCondition(task, owner)}\r\n              {user.isAdmin && (\r\n                <i\r\n                  onClick={() => this.handleTaskDelete(task._id)}\r\n                  className=\"fa fa-trash-o\"\r\n                ></i>\r\n              )}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        {/* displays tasks form if project id equals task id and condition to display new form is true */}\r\n        {newTaskForm && currProjectId === id && this.renderTaskForm()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { id, ownerId } = this.props;\r\n    return <React.Fragment>{this.renderTasks(id, ownerId)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as http from \"../services/postsServices\";\r\nimport { getDate, daysLeft } from \"../utils/formatTime\";\r\nimport Tasks from \"./tasks\";\r\n\r\nclass Project extends Component {\r\n  state = {\r\n    projects: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n  //   method to get projects\r\n  getProjects = async () => {\r\n    const user = this.props.param.user;\r\n    try {\r\n      let projects = await http.getAllProjects();\r\n      projects = projects.data;\r\n      if (user === \"my-projects\") {\r\n        projects = projects.filter(\r\n          project => project.owner._id === this.props.user._id\r\n        );\r\n      }\r\n      this.setState({\r\n        projects: projects\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  //  method to delete project\r\n  deleteProj = async id => {\r\n    try {\r\n      await http.deleteProject(id);\r\n      this.getProjects();\r\n    } catch (error) {}\r\n  };\r\n\r\n  render() {\r\n    const { projects } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"all-projects\">\r\n        {/* <h2>Wecome home</h2> */}\r\n        {/* displays no project if no project exists */}\r\n        {projects.length === 0 && <p>No project</p>}\r\n\r\n        {/* render all existing projects */}\r\n        {projects.map(project => {\r\n          {\r\n            /* get start and end date in dd/mm/yyyy format */\r\n          }\r\n          const startDate = getDate(project.startDate);\r\n          const endDate = getDate(project.endDate);\r\n          {\r\n            /* gets the days btw current date and end date */\r\n          }\r\n          const days = daysLeft(project.startDate, project.endDate);\r\n          return (\r\n            <React.Fragment>\r\n              {/* the classNmae \"project-red\" marks the div left border red if days left is zero */}\r\n              <div\r\n                className={`project ${days === 0 && `project-red`}`}\r\n                key={project._id}\r\n              >\r\n                {/* displays project details */}\r\n                <h2> {project.name} </h2>\r\n                <p>\r\n                  {\" \"}\r\n                  Start date:&ensp;{startDate}&emsp; End date:&ensp;\r\n                  {endDate}\r\n                </p>\r\n                <p>Days left: &ensp;{days}</p>\r\n                <p>Owner: {project.owner.name} </p>\r\n                <p>description: &nbsp; {project.description}</p>\r\n\r\n                {/* if user is an admin display edit and delete button*/}\r\n                {user.isAdmin && (\r\n                  <React.Fragment>\r\n                    <Link to={`/project/${project._id}`}>\r\n                      {\" \"}\r\n                      <i className=\"fa fa-pencil-square-o\"></i>{\" \"}\r\n                    </Link>\r\n                    <i\r\n                      onClick={() => this.deleteProj(project._id)}\r\n                      className=\"fa fa-trash-o\"\r\n                    ></i>\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {/* Component to get Tasks */}\r\n                <Tasks\r\n                  user={this.props.user}\r\n                  ownerId={project.owner._id}\r\n                  id={project._id}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Project;\r\n","import React, { Component } from \"react\";\r\nimport Project from \"./project\";\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Project param={this.props.match.params} user={user} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./userDisplay.css\";\r\nimport * as http from \"../services/postsServices\";\r\n\r\nclass UserDisplay extends Component {\r\n  state = {\r\n    users: []\r\n  };\r\n  async componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = async () => {\r\n    try {\r\n      const users = await http.getUsers();\r\n      this.setState({\r\n        users: users.data\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleApprove = async id => {\r\n    try {\r\n      const approve = await http.approveUser(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleUserDel = async id => {\r\n    try {\r\n      await http.deleteUser(id);\r\n      this.getUsers();\r\n    } catch (error) {}\r\n  };\r\n  render() {\r\n    const { users } = this.state;\r\n    let { user: userId } = this.props;\r\n    userId = userId === undefined ? {} : userId;\r\n    return (\r\n      <div className=\"users-display\">\r\n        {users.map(user => (\r\n          <div className=\"user-display\" key={user._id}>\r\n            <h4>Name: {user.name}</h4>\r\n            <p>Email: {user.email}</p>\r\n            <p>Position: {user.position} </p>\r\n            {userId.isAdmin && !user.approved && (\r\n              <React.Fragment>\r\n                <button onClick={() => this.handleApprove(user._id)}>\r\n                  Approve\r\n                </button>\r\n              </React.Fragment>\r\n            )}\r\n            {userId.isAdmin && user.approved && (\r\n              <button onClick={() => this.handleApprove(user._id)}>\r\n                Revoke access\r\n              </button>\r\n            )}\r\n            {userId.isAdmin && (\r\n              <button\r\n                className=\"delete\"\r\n                onClick={() => this.handleUserDel(user._id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDisplay;\r\n","import { removeToken } from \"../services/authServices\";\r\n\r\nconst Logout = () => {\r\n  removeToken();\r\n  window.location = \"/\";\r\n};\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logout from \"./logout\";\r\nclass SideNav extends Component {\r\n  state = {};\r\n\r\n  myAccFunc() {\r\n    let x = document.getElementById(\"demoAcc\");\r\n    if (x.className.indexOf(\"w3-show\") === -1) {\r\n      x.className += \" w3-show\";\r\n      x.previousElementSibling.className += \" w3-green\";\r\n    } else {\r\n      x.className = x.className.replace(\" w3-show\", \"\");\r\n      x.previousElementSibling.className = x.previousElementSibling.className.replace(\r\n        \" w3-green\",\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n\r\n  myDropFunc() {\r\n    let x = document.getElementById(\"demoDrop\");\r\n    if (x.className.indexOf(\"w3-show\") === -1) {\r\n      x.className += \" w3-show\";\r\n      x.previousElementSibling.className += \" w3-green\";\r\n    } else {\r\n      x.className = x.className.replace(\" w3-show\", \"\");\r\n      x.previousElementSibling.className = x.previousElementSibling.className.replace(\r\n        \" w3-green\",\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"w3-sidebar w3-bar-block w3-light-grey w3-card\"\r\n          style={{ width: \"160px\", position: \"fixed\", top: \"0\" }}\r\n        >\r\n          <h6>{user.name}</h6>\r\n          <div className=\"w3-dropdown-click\">\r\n            <button className=\"w3-button\" onClick={this.myDropFunc}>\r\n              <i className=\"fa fa-project\"></i> Projects{\" \"}\r\n              <i className=\"fa fa-caret-down\"></i>\r\n            </button>\r\n            <div\r\n              id=\"demoDrop\"\r\n              className=\"w3-dropdown-content w3-bar-block w3-white w3-card\"\r\n            >\r\n              {user.isAdmin && (\r\n                <Link to=\"/project/new\" className=\"w3-bar-item w3-button\">\r\n                  New Project\r\n                </Link>\r\n              )}\r\n              <Link to=\"/\" className=\"w3-bar-item w3-button\">\r\n                All Projects\r\n              </Link>\r\n              <Link to=\"/my-projects\" className=\"w3-bar-item w3-button\">\r\n                My Projects\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/users\" className=\"w3-bar-item w3-button\">\r\n            <i className=\"fa fa-users\"></i> Users\r\n          </Link>\r\n\r\n          <Link to=\"\" className=\"w3-button\" onClick={Logout}>\r\n            <i className=\"fa fa-sign-out\"></i>Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authServices\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport * as http from \"./services/postsServices\";\nimport \"./App.css\";\nimport { getCurrentUser } from \"./services/authServices\";\nimport Login from \"./components/loginForm\";\nimport SignUp from \"./components/signUp\";\nimport ProjectForm from \"./components/projectForm\";\nimport Home from \"./components/home\";\nimport UserDisplay from \"./components/usersDisplay\";\nimport SideNav from \"./components/sidenav\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nclass App extends Component {\n  state = {\n    user: {}\n  };\n  async componentDidMount() {\n    let user = getCurrentUser();\n    if (user) {\n      user = await http.getUser(user._id);\n      user = user.data;\n      this.setState({\n        user\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.user && <SideNav user={this.state.user} />}\n        <ToastContainer />\n        <Switch>\n          <ProtectedRoute\n            path=\"/\"\n            exact\n            component={props => <Home user={this.state.user} {...props} />}\n          />\n          <Route path=\"/login\" exact render={props => <Login {...props} />} />\n          <Route\n            path=\"/register\"\n            exact\n            render={props => <SignUp {...props} />}\n          />\n          <ProtectedRoute\n            path=\"/project/new\"\n            exact\n            component={props => (\n              <ProjectForm user={this.state.user} {...props} />\n            )}\n          />\n          <ProtectedRoute\n            path=\"/project/:id\"\n            component={props => (\n              <ProjectForm user={this.state.user} {...props} />\n            )}\n          />\n          <ProtectedRoute\n            path=\"/users\"\n            render={props => <UserDisplay user={this.state.user} {...props} />}\n          />\n          <ProtectedRoute\n            path=\"/:user\"\n            exact\n            component={props => <Home user={this.state.user} {...props} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />{\" \"}\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}