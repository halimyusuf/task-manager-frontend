{"version":3,"sources":["services/logService.js","services/authServices.js","services/httpServices.js","services/postsServices.js","services/formSchema.js","components/common/input.jsx","components/common/select.jsx","components/common/textarea.jsx","components/common/form.jsx","components/loginForm.jsx","components/signUp.jsx","components/projectForm.jsx","utils/formatTime.js","components/tasks.jsx","components/project.jsx","components/Home.jsx","components/usersDisplay.jsx","components/Logout.jsx","components/NavBar.jsx","components/sidenav.jsx","components/common/protectedRoute.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["init","log","error","console","getCurrentUser","decode","localStorage","getItem","loginWithJwt","token","setItem","getUrl","endpoint","data","a","http","post","login","register","apiClient","axios","create","baseURL","apiUrl","headers","Accept","interceptors","request","use","config","NProgress","start","response","done","status","logger","message","toast","Promise","reject","get","patch","delete","getProject","id","saveProject","project","_id","projectClone","deleteProject","approveUser","getUsers","deleteUser","postTask","getTasks","deleteTask","markDone","signUpSchema","name","Joi","string","min","required","label","position","email","password","regex","loginSchema","projectSchema","owner","any","vendor","description","startDate","endDate","taskSchema","taskDescription","getSignUpSchema","getLoginSchema","getProjectSchema","getTaskSchema","Input","rest","className","htmlFor","placeholder","Select","options","value","map","option","key","TextArea","Form","state","errors","validate","result","schema","abortEarly","details","item","path","handleSubmit","e","preventDefault","setState","doSubmit","validateProperty","obj","handleChange","input","currentTarget","files","image","disabled","this","onChange","type","Component","Login","auth","window","location","err","Fragment","Paper","noValidate","autoComplete","onSubmit","inputField","renderButton","to","SignUp","props","history","push","ProjectForm","ownerOptions","users","match","params","selectField","renderTextArea","getDate","date","Date","toLocaleDateString","Tasks","tasks","newTaskId","currProjectId","open","showTasks","componentDidMount","handleShowTask","handleNewTask","bool","newTaskForm","handleDone","handleClick","handleTaskDelete","renderTaskForm","renderTasks","user","filter","task","newTaskClass","taskClass","List","aria-labelledby","subheader","ListSubheader","component","ListItemText","primary","isAdmin","onClick","ListItemIcon","length","ListItem","secondary","Chip","color","size","ListItemSecondaryAction","edge","Button","Divider","ownerId","styles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Project","useState","projects","setProject","modifier","setModifier","classes","getProjects","param","deleteProj","useEffect","days","date1","date2","difference","getTime","Math","round","daysLeft","Card","variant","CardContent","Typography","gutterBottom","CardActions","Home","UserDisplay","handleApprove","handleUserDel","userId","undefined","approved","Logout","removeItem","reload","useStyles","theme","flexGrow","MenuAppBar","toggleSide","React","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","Toolbar","IconButton","aria-label","aria-controls","aria-haspopup","event","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","list","width","fullList","SideNav","anchor","top","left","bottom","right","toggleDrawer","SwipeableDrawer","onOpen","clsx","role","onKeyDown","button","ProtectedRoute","render","pathname","from","App","exact","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c0d6009.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import http from './httpServices';\r\nimport decode from 'jwt-decode';\r\n\r\nconst jwtToken = 'token';\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const user = decode(localStorage.getItem(jwtToken));\r\n    return user;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function loginWithJwt(token) {\r\n  localStorage.setItem(jwtToken, token);\r\n}\r\n\r\nexport function removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nfunction getUrl(endpoint) {\r\n  return `/user/${endpoint}`;\r\n}\r\n\r\nexport async function login(data) {\r\n  return await http.post(getUrl('login'), data);\r\n}\r\n\r\nexport async function register(data) {\r\n  return await http.post(getUrl('register'), data);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nexport default {\r\n  login,\r\n  register,\r\n  loginWithJwt,\r\n  getCurrentUser,\r\n};\r\n","import axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport logger from './logService';\r\nimport { toast } from 'react-toastify';\r\nimport { getJwt } from './authServices';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    Accept: 'Application/json',\r\n    'Content-Type': 'application/json',\r\n    'todo-auth-token': getJwt(),\r\n  },\r\n});\r\n\r\n// axios.defaults.headers.common['todo-auth-token'] = getJwt();\r\n\r\napiClient.interceptors.request.use((config) => {\r\n  NProgress.start();\r\n  return config;\r\n});\r\n\r\napiClient.interceptors.response.use((response) => {\r\n  NProgress.done();\r\n  return response;\r\n});\r\n\r\napiClient.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    if (error.message === 'Network Error') {\r\n      toast.error('Network error');\r\n      NProgress.done();\r\n    } else {\r\n      toast.error('An unexpected error occured');\r\n      console.log(error.message);\r\n    }\r\n  }\r\n  NProgress.done();\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: apiClient.get,\r\n  post: apiClient.post,\r\n  patch: apiClient.patch,\r\n  delete: apiClient.delete,\r\n};\r\n","import http from './httpServices';\r\n\r\n// Projects\r\nexport function getAllProjects() {\r\n  return http.get(`/project/all`);\r\n}\r\n\r\nexport function getProject(id) {\r\n  return http.get(`/project/${id}`);\r\n}\r\n\r\nexport function saveProject(project) {\r\n  if (project._id) {\r\n    const projectClone = {\r\n      ...project,\r\n    };\r\n    delete projectClone._id;\r\n    return http.patch(`/project/${project._id}`, projectClone);\r\n  }\r\n  return http.post(`/project`, project);\r\n}\r\n\r\nexport function deleteProject(id) {\r\n  return http.delete(`/project/${id}`);\r\n}\r\n\r\n// User\r\nexport function approveUser(id) {\r\n  return http.patch(`/user/${id}/approve`);\r\n}\r\n\r\nexport function getUsers() {\r\n  return http.get(`/user/all`);\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return http.delete(`/user/${id}`);\r\n}\r\nexport function getUser(id) {\r\n  return http.get(`/user/${id}`);\r\n}\r\n\r\n// Task\r\nexport function postTask(data) {\r\n  return http.post(`/task`, data);\r\n}\r\n\r\nexport function getTasks(id) {\r\n  return http.get(`/task/${id}`);\r\n}\r\n\r\nexport function deleteTask(id) {\r\n  return http.delete(`/task/${id}`);\r\n}\r\nexport function markDone(id) {\r\n  return http.patch(`/task/${id}/done`);\r\n}\r\n","import Joi from \"joi-browser\";\r\n\r\nconst signUpSchema = {\r\n    name: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"name\"),\r\n    position: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"position\"),\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .regex(/(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{7,50})$/)\r\n        .error(() => {\r\n            return {\r\n                message: \"Password must be at least 7 characters long with at least a digit\"\r\n            };\r\n        })\r\n}\r\n\r\nconst loginSchema = {\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .min(7)\r\n        .required()\r\n        .label(\"Password\")\r\n}\r\n\r\nconst projectSchema = {\r\n    name: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"name\"),\r\n    owner: Joi.any()\r\n        .required()\r\n        .label(\"owner\"),\r\n    vendor: Joi.string()\r\n        .min(20)\r\n        .required()\r\n        .label(\"vendor\"),\r\n    description: Joi.string()\r\n        .min(20)\r\n        .required()\r\n        .label(\"description\"),\r\n    startDate: Joi.any()\r\n        .required()\r\n        .label(\"Start date\"),\r\n    endDate: Joi.any()\r\n        .required()\r\n        .label(\"End date\"),\r\n    _id: Joi.any()\r\n}\r\n\r\nconst taskSchema = {\r\n    taskDescription: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"description\")\r\n}\r\n\r\n\r\nexport function getSignUpSchema() {\r\n    return signUpSchema\r\n}\r\nexport function getLoginSchema() {\r\n    return loginSchema\r\n}\r\n\r\nexport function getProjectSchema() {\r\n    return projectSchema\r\n}\r\n\r\nexport function getTaskSchema() {\r\n    return taskSchema\r\n}","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        placeholder={label}\r\n        className='form-control'\r\n        {...rest}\r\n      />\r\n      {error && <small className='danger'>{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, error, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} className=\"form-control\" id={name} {...rest}>\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nconst TextArea = ({ name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea name={name} {...rest}></textarea>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\nimport TextArea from './textarea';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({\r\n      errors: errors || {},\r\n    });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  validateProperty = (name, value) => {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { currentTarget: input } = e;\r\n    let value = input.value;\r\n    if (input.files) {\r\n      this.setState({\r\n        image: input.files[0],\r\n      });\r\n    }\r\n    const errors = { ...this.state.errors };\r\n    const error = this.validateProperty(input.name, value);\r\n    if (error) errors[input.name] = error;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = value;\r\n    this.setState({\r\n      data,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return <button disabled={this.validate()}>{label}</button>;\r\n  }\r\n\r\n  selectField(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  inputField(name, label, type = 'text', placeholder = '') {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, placeholder) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TextArea\r\n        value={data[name]}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport auth, { loginWithJwt } from '../services/authServices';\r\nimport { getLoginSchema } from '../services/formSchema';\r\nimport Form from './common/form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper } from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport NProgress from 'nprogress';\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = getLoginSchema();\r\n\r\n  // default method handle the onSubmit function call in a form\r\n  async doSubmit() {\r\n    try {\r\n      const response = await auth.login(this.state.data);\r\n      loginWithJwt(response.headers['todo-auth-token']);\r\n      window.location = '/';\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      let errors = { ...this.state.errors };\r\n      if (err) {\r\n        if (err.status === 401) {\r\n          NProgress.done();\r\n          errors.password = 'User pending approval';\r\n          return this.setState({\r\n            errors,\r\n          });\r\n        } else {\r\n          NProgress.done();\r\n          errors.password = 'Incorrect email or password';\r\n          return this.setState({\r\n            errors,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* renders the react form */}\r\n\r\n        <div className='auth-form'>\r\n          <Paper className='paper'>\r\n            <form noValidate autoComplete='off' onSubmit={this.handleSubmit}>\r\n              {this.inputField('email', 'Email')}\r\n              {this.inputField('password', 'Password')}\r\n              {this.renderButton('Login')}\r\n            </form>\r\n            <span>Don't have an account? ,</span>\r\n            <Link to='/register'>Register</Link>\r\n          </Paper>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport auth from '../services/authServices';\r\nimport { getSignUpSchema } from '../services/formSchema';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './common/form';\r\n\r\nclass SignUp extends Form {\r\n  state = {\r\n    data: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      position: '',\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = getSignUpSchema();\r\n\r\n  async doSubmit() {\r\n    try {\r\n      await auth.register(this.state.data);\r\n      this.props.history.push('/login');\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      if (err) {\r\n        let errors = { ...this.state.errors };\r\n        errors.email = 'User with email exists';\r\n        return this.setState({\r\n          errors,\r\n        });\r\n      }\r\n      //   toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='auth-form'>\r\n        <Paper className='paper'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.inputField('name', 'Name')}\r\n            {this.inputField('email', 'Email')}\r\n            {this.inputField('password', 'Password')}\r\n            {this.inputField('position', 'Position')}\r\n            {this.renderButton('Submit')}\r\n          </form>\r\n          <span>ALready have an account? </span>\r\n          <Link to='/login'>Login</Link>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { getProjectSchema } from '../services/formSchema';\r\nimport Form from './common/form';\r\nimport * as http from '../services/postsServices';\r\n\r\nclass ProjectForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: '',\r\n      vendor: '',\r\n      owner: '',\r\n      description: '',\r\n      startDate: '',\r\n      endDate: '',\r\n    },\r\n    errors: {},\r\n    ownerOptions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await http.getUsers();\r\n      const users = response.data;\r\n\r\n      const id = this.props.match.params.id;\r\n      if (id) {\r\n        let project = await http.getProject(id);\r\n        project = project.data;\r\n        if (project) {\r\n          const data = { ...this.state.data };\r\n          data.name = project.name;\r\n          data.vendor = project.vendor;\r\n          data.owner = project.owner;\r\n          data.name = project.name;\r\n          data.description = project.description;\r\n          data.startDate = '';\r\n          data.endDate = '';\r\n          data._id = project._id;\r\n          this.setState({\r\n            data,\r\n            ownerOptions: users,\r\n            errors: [],\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ownerOptions: users,\r\n          errors: [],\r\n        });\r\n      }\r\n    } catch (error) {}\r\n  }\r\n  schema = getProjectSchema();\r\n  doSubmit = async () => {\r\n    try {\r\n      await http.saveProject(this.state.data);\r\n      this.props.history.push('/');\r\n    } catch (error) {}\r\n    //   toast.error(\"Unexpected error\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='auth-form'>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField('name', 'Name')}\r\n          {this.selectField('owner', 'Owner', this.state.ownerOptions)}\r\n          {this.inputField('vendor', 'Vendor')}\r\n          {this.renderTextArea('description', 'Enter project description')}\r\n          {this.inputField('startDate', 'Start', 'date')}\r\n          {this.inputField('endDate', 'End', 'date')}\r\n          {this.renderButton('Submit')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectForm;\r\n","export function getDate(date) {\r\n  date = new Date(date);\r\n  date = date.toLocaleDateString();\r\n  return date;\r\n}\r\n\r\nexport function daysLeft(date1, date2) {\r\n  date1 = new Date();\r\n  date2 = new Date(date2);\r\n  let difference = date2.getTime() - date1.getTime();\r\n  difference = difference < 0 ? 0 : difference;\r\n  let result = Math.round(difference / (1000 * 3600 * 24));\r\n  return result;\r\n}\r\n\r\nexport function getFormDate(date) {\r\n  date = new Date(date);\r\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDay()}`;\r\n}\r\n","import React from 'react';\r\nimport Form from './common/form';\r\nimport { getTaskSchema } from '../services/formSchema';\r\nimport * as http from '../services/postsServices';\r\n// material icon imports\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { List, Chip, ListItemIcon, Button, Divider } from '@material-ui/core';\r\n\r\nclass Tasks extends Form {\r\n  state = {\r\n    data: {\r\n      taskDescription: '',\r\n    },\r\n    tasks: [],\r\n    newTaskId: '',\r\n    currProjectId: '',\r\n    errors: [],\r\n    open: false,\r\n    showTasks: false,\r\n  };\r\n\r\n  schema = getTaskSchema();\r\n\r\n  componentDidMount = () => {\r\n    this.getTasks();\r\n  };\r\n\r\n  handleShowTask = () => {\r\n    this.setState({\r\n      showTasks: !this.state.showTasks,\r\n    });\r\n  };\r\n\r\n  getTasks = async () => {\r\n    try {\r\n      const response = await http.getTasks();\r\n      this.setState({\r\n        tasks: response.data,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleNewTask = (id) => {\r\n    const { newTaskForm } = this.state;\r\n    const { currProjectId } = this.props;\r\n    let bool = newTaskForm ? false : true;\r\n    if (currProjectId !== id) {\r\n      this.setState({\r\n        currProjectId: id,\r\n        newTaskForm: bool,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newTaskForm: bool,\r\n      });\r\n    }\r\n    // this.renderTasks();\r\n  };\r\n\r\n  handleDone = async (id) => {\r\n    try {\r\n      await http.markDone(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { open } = this.state;\r\n    this.setState({\r\n      open: !open,\r\n    });\r\n  };\r\n\r\n  handleTaskDelete = async (id) => {\r\n    try {\r\n      await http.deleteTask(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  renderTaskForm = () => {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {this.inputField('taskDescription', '')}\r\n        {this.renderButton('Add')}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { currProjectId: project } = this.state;\r\n    const { taskDescription: description } = this.state.data;\r\n    try {\r\n      const data = { description, project };\r\n      await http.postTask(data);\r\n      this.getTasks(project);\r\n      this.setState({\r\n        data: { taskDescription: '' },\r\n        newTaskForm: false,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  // method to display all tasks\r\n  renderTasks = (id, owner) => {\r\n    let { tasks, newTaskForm, currProjectId, showTasks } = this.state;\r\n    const { user } = this.props;\r\n    // filters all tasks for a particular project\r\n    tasks = tasks.filter((task) => task.project === id);\r\n    let newTaskClass = 'fa fa-';\r\n    newTaskClass += newTaskForm ? 'minus' : 'plus';\r\n    const taskClass = `fa fa-caret-${showTasks ? 'down' : 'up'}`;\r\n    return (\r\n      <div>\r\n        <List\r\n          aria-labelledby='nested-list-subheader'\r\n          subheader={\r\n            <ListSubheader component='div' id='nested-list-subheader'>\r\n              {/* <ListItemIcon>\r\n                <i className='fa fa-tasks'></i>\r\n              </ListItemIcon> */}\r\n              <ListItemText primary='Tasks' />\r\n              {user.isAdmin && (\r\n                <i\r\n                  onClick={() => this.handleNewTask(id)}\r\n                  className={newTaskClass}\r\n                ></i>\r\n              )}\r\n              <ListItemIcon>\r\n                <i className={taskClass} onClick={this.handleShowTask}></i>\r\n              </ListItemIcon>\r\n            </ListSubheader>\r\n          }\r\n        >\r\n          {showTasks && (\r\n            <>\r\n              {tasks.length === 0 && 'No task yet'}\r\n              {tasks.map((task) => (\r\n                <div className='task' key={task._id}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      className='task-text'\r\n                      primary={task.description}\r\n                      secondary={\r\n                        <Chip\r\n                          color={`${task.done ? 'primary' : 'secondary'}`}\r\n                          label={`${task.done ? 'Finished' : 'Pending'}`}\r\n                          component='p'\r\n                          size='small'\r\n                        />\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n\r\n                  <ListItemSecondaryAction edge='end'>\r\n                    <div>\r\n                      {user._id === owner && (\r\n                        <Button\r\n                          onClick={() =>\r\n                            this.handleDone(\r\n                              task._id,\r\n                              `${task.done ? 'undo' : 'done'}`\r\n                            )\r\n                          }\r\n                        >\r\n                          {`${task.done ? 'Undo' : 'Done'}`}\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n\r\n                    <DeleteIcon\r\n                      color='secondary'\r\n                      onClick={() => this.handleTaskDelete(task._id)}\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </List>\r\n        {/* displays tasks form if project id equals task id and condition to display new form is true */}\r\n        {newTaskForm && currProjectId === id && this.renderTaskForm()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { id, ownerId } = this.props;\r\n    return <React.Fragment>{this.renderTasks(id, ownerId)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport * as http from '../services/postsServices';\r\nimport { getDate, daysLeft } from '../utils/formatTime';\r\nimport Tasks from './tasks';\r\n// material icon imports\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst Project = (props) => {\r\n  const [projects, setProject] = useState([]);\r\n  const [modifier, setModifier] = useState(0);\r\n  const classes = styles();\r\n  const { user } = props;\r\n  const getProjects = async () => {\r\n    const user = props.param.user;\r\n    try {\r\n      let projects = await http.getAllProjects();\r\n      projects = projects.data;\r\n      if (user === 'my-projects') {\r\n        projects = projects.filter(\r\n          (project) => project.owner._id === props.user._id\r\n        );\r\n      }\r\n      setProject(projects);\r\n    } catch (error) {}\r\n  };\r\n\r\n  //  method to delete project\r\n  const deleteProj = async (id) => {\r\n    try {\r\n      await http.deleteProject(id);\r\n      const inc = modifier + 1;\r\n      setModifier(inc);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getProjects();\r\n    })();\r\n  }, [modifier]);\r\n\r\n  return (\r\n    <div className='all-projects'>\r\n      {/* <h2>Wecome home</h2> */}\r\n      {/* displays no project if no project exists */}\r\n      {projects.length === 0 && <p>No project</p>}\r\n\r\n      {/* render all existing projects  */}\r\n      {projects.map((project) => {\r\n        const startDate = getDate(project.startDate);\r\n        const endDate = getDate(project.endDate);\r\n        const days = daysLeft(project.startDate, project.endDate);\r\n        return (\r\n          <div\r\n            className={`project ${days === 0 && `project-red`}`}\r\n            key={project._id}\r\n          >\r\n            <Card className={classes.root} variant='outlined'>\r\n              <CardContent>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color='textSecondary'\r\n                  gutterBottom\r\n                >\r\n                  {project.name}\r\n                </Typography>\r\n                <Typography variant='body2' component='p'>\r\n                  {' '}\r\n                  From:&ensp;{startDate}&emsp; To:&ensp;\r\n                  {endDate}\r\n                </Typography>\r\n                <Typography className={classes.pos} color='textSecondary'>\r\n                  Days left: &ensp;{days}\r\n                  <br />\r\n                  Owner: {project.owner.name}\r\n                </Typography>\r\n                <Typography variant='body2' component='p'>\r\n                  description: &nbsp; {project.description}\r\n                </Typography>\r\n              </CardContent>\r\n              {user.isAdmin && (\r\n                <CardActions>\r\n                  <Button size='small'>\r\n                    <Link to={`/project/${project._id}`}>\r\n                      <i className='fa fa-pencil-square-o'></i>{' '}\r\n                    </Link>\r\n                  </Button>\r\n                  <Button>\r\n                    <i\r\n                      onClick={() => deleteProj(project._id)}\r\n                      className='fa fa-trash-o'\r\n                    ></i>\r\n                  </Button>\r\n                </CardActions>\r\n              )}\r\n              <CardContent>\r\n                <Tasks\r\n                  user={props.user}\r\n                  ownerId={project.owner._id}\r\n                  id={project._id}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Project;\r\n","import React, { Component } from \"react\";\r\nimport Project from \"./project\";\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Project param={this.props.match.params} user={user} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport './userDisplay.css';\r\nimport * as http from '../services/postsServices';\r\n// material imports\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\n\r\nclass UserDisplay extends Component {\r\n  state = {\r\n    users: [],\r\n  };\r\n  async componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = async () => {\r\n    try {\r\n      const users = await http.getUsers();\r\n      this.setState({\r\n        users: users.data,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleApprove = async (id) => {\r\n    try {\r\n      await http.approveUser(id);\r\n      this.componentDidMount();\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleUserDel = async (id) => {\r\n    try {\r\n      await http.deleteUser(id);\r\n      this.getUsers();\r\n    } catch (error) {}\r\n  };\r\n  render() {\r\n    const { users } = this.state;\r\n    let { user: userId } = this.props;\r\n    userId = userId === undefined ? {} : userId;\r\n    return (\r\n      <div className='users-display'>\r\n        {users.map((user) => (\r\n          <div className='user-display' key={user._id}>\r\n            <Card variant='outlined'>\r\n              <CardContent>\r\n                <Typography variant='h5' component='h2'>\r\n                  {user.name}\r\n                </Typography>\r\n                <Typography color='textPrimary'>\r\n                  {' '}\r\n                  <MailIcon /> {user.email}\r\n                </Typography>\r\n                <Typography variant='body2' color='textPrimary'>\r\n                  <BusinessIcon /> {user.position}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                {userId.isAdmin && !user.approved && (\r\n                  <React.Fragment>\r\n                    <Button\r\n                      size='small'\r\n                      color='primary'\r\n                      onClick={() => this.handleApprove(user._id)}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {userId.isAdmin && user.approved && (\r\n                  <Button\r\n                    size='small'\r\n                    color='primary'\r\n                    onClick={() => this.handleApprove(user._id)}\r\n                  >\r\n                    Revoke access\r\n                  </Button>\r\n                )}\r\n                {userId.isAdmin && (\r\n                  <Button\r\n                    size='small'\r\n                    color='secondary'\r\n                    // className='delete'\r\n                    onClick={() => this.handleUserDel(user._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                )}\r\n                {/* <Button size='small'>Learn More</Button> */}\r\n              </CardActions>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDisplay;\r\n","import { removeToken } from '../services/authServices';\r\n\r\nconst Logout = () => {\r\n  // removes token from local storage\r\n  removeToken();\r\n  window.location.reload();\r\n  // window.location = \"/\";\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Logout from './Logout';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar({ user, toggleSide }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton color='inherit' aria-label='menu' size='small'>\r\n            <MenuIcon onClick={toggleSide('left', true)} />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            {user && user.name}\r\n          </Typography>\r\n          {user && (\r\n            <div>\r\n              <IconButton\r\n                aria-label='account of current user'\r\n                aria-controls='menu-appbar'\r\n                aria-haspopup='true'\r\n                onClick={handleMenu}\r\n                color='inherit'\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id='menu-appbar'\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={Logout}>Logout</MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  {' '}\r\n                  <Link to='/users'>Users</Link>{' '}\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from './Logout';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NavBar from './NavBar';\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\nconst SideNav = ({ user }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role='presentation'\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {/* <ListItem button>\r\n          <ListItemIcon>\r\n            <i className='fa fa-project'></i>\r\n            <i className='fa fa-caret-down'></i>\r\n          </ListItemIcon>\r\n          <ListItemText primary={'Projects'} />\r\n        </ListItem> */}\r\n        {user.isAdmin && (\r\n          <ListItem button>\r\n            <Link to='/project/new' className='w3-bar-item w3-button'>\r\n              <ListItemText primary='New Project' />\r\n            </Link>\r\n          </ListItem>\r\n        )}\r\n        <ListItem button>\r\n          <Link to='/' className='w3-bar-item w3-button'>\r\n            <ListItemText primary='All projects' />\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <Link to='/my-projects' className='w3-bar-item w3-button'>\r\n            {' '}\r\n            <ListItemText primary='My Projects' />{' '}\r\n          </Link>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <Link to='/users' className='w3-bar-item w3-button'>\r\n            <ListItemIcon>\r\n              {/* <i className='fa fa-users'></i> */}\r\n              <ListItemText primary='Users' />\r\n            </ListItemIcon>\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <Link to='' className='w3-bar-item w3-button' onClick={Logout}>\r\n            <ListItemIcon>\r\n              {/* <i className='fa fa-sign-out'></i> */}\r\n              <ListItemText primary='Logout' />\r\n            </ListItemIcon>\r\n          </Link>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <React.Fragment key={'left'}>\r\n          <NavBar user={user} toggleSide={toggleDrawer} />\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authServices\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as http from './services/postsServices';\r\nimport './App.css';\r\nimport { getCurrentUser } from './services/authServices';\r\nimport Login from './components/loginForm';\r\nimport SignUp from './components/signUp';\r\nimport ProjectForm from './components/projectForm';\r\nimport Home from './components/Home';\r\nimport UserDisplay from './components/usersDisplay';\r\nimport SideNav from './components/sidenav';\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    user: {},\r\n  };\r\n  async componentDidMount() {\r\n    let user = getCurrentUser();\r\n    if (user) {\r\n      user = await http.getUser(user._id);\r\n      user = user.data;\r\n      this.setState({\r\n        user,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.user.name && <SideNav user={this.state.user} />}\r\n        {/* <NavBar user={this.state.user} /> */}\r\n        <div>\r\n          <ToastContainer />\r\n        </div>\r\n        <Switch>\r\n          <ProtectedRoute\r\n            path='/'\r\n            exact\r\n            component={(props) => <Home user={this.state.user} {...props} />}\r\n          />\r\n          <Route path='/login' exact render={(props) => <Login {...props} />} />\r\n          <Route\r\n            path='/register'\r\n            exact\r\n            render={(props) => <SignUp {...props} />}\r\n          />\r\n          <ProtectedRoute\r\n            path='/project/new'\r\n            exact\r\n            component={(props) => (\r\n              <ProjectForm user={this.state.user} {...props} />\r\n            )}\r\n          />\r\n          <ProtectedRoute\r\n            path='/project/:id'\r\n            component={(props) => (\r\n              <ProjectForm user={this.state.user} {...props} />\r\n            )}\r\n          />\r\n          <ProtectedRoute\r\n            path='/users'\r\n            render={(props) => (\r\n              <UserDisplay user={this.state.user} {...props} />\r\n            )}\r\n          />\r\n          <ProtectedRoute\r\n            path='/:user'\r\n            exact\r\n            component={(props) => <Home user={this.state.user} {...props} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'nprogress/nprogress.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />{' '}\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}